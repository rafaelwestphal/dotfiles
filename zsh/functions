ssh-reagent () {
  for agent in /tmp/ssh-*/agent.*; do
    echo $agent
    export SSH_AUTH_SOCK=$agent
    if ssh-add -l 2>&1 > /dev/null; then
      echo Found working SSH Agent:
      ssh-add -l
      return
    fi
  done
  echo "Cannot find ssh agent - maybe you should reconnect and forward it?"
}

copyenv() {
  if [ -z $1 ];then
    echo "Please specify user@host.tld as the first switch to this script"
    exit
  fi

  cd ~

  scp -r projects/dotfiles .screenrc .ackrc .bashrc $1:
  ssh $1 ln -s $HOME/projects/dotfiles/zsh/zshrc ~/.zshrc
  ssh $1 ln -s $HOME/projects/dotfiles/vim/vimrc ~/.vimrc
  ssh $1 ln -s $HOME/projects/dotfiles/vim ~/.vim
  ssh $1 ln -s $HOME/projects/dotfiles/git/gitconfig ~/.gitconfig
}

sshcopy() {
  cat ~/.ssh/id_rsa.pub |ssh $1 'sh -c "cat - >> ~/.ssh/authorized_keys"'
}

sshcopy2 () {
  KEY="$HOME/.ssh/id_rsa.pub"

  if [ ! -f $KEY ];then
    echo "private key not found at $KEY"
    echo "* please create it with "ssh-keygen -t dsa" *"
    echo "* to login to the remote host without a password, dont give the key you create with ssh-keygen a password! *"
    exit
  fi

  if [ -z $1 ];then
    echo "Please specify user@host.tld as the first switch to this script"
    exit
  fi

  echo "Putting your key on $1... "
  KEYCODE=`cat $KEY`
  ssh -q $1 "mkdir -p ~/.ssh 2>/dev/null; chmod 700 ~/.ssh; echo "$KEYCODE" >> ~/.ssh/authorized_keys; chmod 644 ~/.ssh/authorized_keys"
}

cp_p()
{
   set -e
   strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
      | awk '{
      count += $NF
            if (count % 10 == 0) {
               percent = count / total_size * 100
               printf "%3d%% [", percent
               for (i=0;i<=percent;i++)
                  printf "="
               printf ">"
               for (i=percent;i<100;i++)
                  printf " "
               printf "]\r"
            }
         }
         END { print "" }' total_size=$(stat -c '%s' "${1}") count=0
}

alias calc="noglob _calc"
alias calcfx="noglob _calcfx"

function _calc () {
  awk "BEGIN { print $* ; }"
}

function _calcfx () {
  gawk -v CONVFMT="%12.2f" -v OFMT="%.9g"  "BEGIN { print $* ; }"
}

function gack
{
  project_root=`git rev-parse --show-toplevel`
  ack $@ $project_root
}

function screen-sessions {
  typeset -a sessions
  for i in /var/run/screen/S-${USER}/*(p:t);  do
    sessions+=(${i#*.})
  done
  reply=($sessions)
}

compctl -K screen-sessions screen
