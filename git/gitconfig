[merge]
  tool = vimdiff

[alias]
  sup = "!f() { stash_msg=$(git stash save 'auto stash by git-sup') && git pull --rebase && [ \"$stash_msg\" == \"No local changes to save\" ] || git stash pop -q ; }; f" 
  subup = "submodule foreach git pull --rebase"
  up = pull --rebase
  current = "!sh -c \"git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/\\1/'\""
  wu = "!sh -c \"git log --stat origin/\\`git current\\`..@{0}\""
  wup = "!sh -c \"git log -p origin/\\`git current\\`..@{0}\""
  psh = "!sh -c \"git push origin \\`git current\\`\""
  pshf = "!sh -c \"git push -f origin \\`git current\\`\""
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  her = "push heroku"
  d = diff develop --
  changes = "log --pretty=format:\"%h %ad | %s [%an]\" --stat --date=short HEAD@{1}.." 
  fetchup = "fetch upstream"
  remoteadd = "remote add upstream"
  root = "!pwd"
  ss = status -uno
  uncommit = reset --soft HEAD^
	vd = difftool
  unpushed = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git log origin/$PROJ_BRANCH..HEAD"
  unpulled = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git fetch && git log HEAD..origin/$PROJ_BRANCH"

[core]
	excludesfile = $HOME/.gitignore

[color]
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow
  frag = cyan
  old = red
  new = green
[color "status"]
  added = green
  changed = cyan
  untracked = yellow

# git fetch
# git flow feature track [new branch]
[user]
	name = Nathan Smith
	email = nathan.smith@thesystech.com
[push]
	default = current
[diff]
	tool = vimdiff
[difftool]
	prompt = false
